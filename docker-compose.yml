version: '3'

services:

  client_web:
    container_name: client_web
    build:
      context: ./client_web
      dockerfile: Dockerfile
    command: npm run start
    volumes:
      - client-volume:/home/app/client_web/build/
    depends_on:
      - server
    ports:
      - 8081:8081
    env_file:
      - ./client_web/.env

  #client_mobile:
  #  container_name: client_mobile
  #  build:
  #    context: ./client_mobile
  #    dockerfile: Dockerfile
  #  volumes:
  #    - client-volume:/home/app/client_mobile/android/app/build/outputs/apk/
  #  depends_on:
  #    - server
  #  env_file:
  #    - ./client_mobile/.env

  cron:
    container_name: cron
    build:
      context: ./server
      dockerfile: cron.Dockerfile
    command: bash -c "python3 scripts/check_db.py --service-name server --ip server --port 8080 &&
                      cron -f"
    depends_on:
      - server
    env_file:
      - ./server/.env

  server:
    container_name: server
    build:
      context: ./server
      dockerfile: server.Dockerfile
    command: bash -c "python3 scripts/check_db.py --service-name db --ip db --port 3306 &&
                      python3 area/manage.py makemigrations ;
                      python3 area/manage.py migrate ;
                      python3 area/manage.py runserver 0.0.0.0:8080"
    depends_on:
      - db
    ports:
      - 8080:8080
    env_file:
      - ./server/.env
    volumes:
      - mysql-socket-volume:/var/run/mysqld/

  db:
    container_name: db
    image: mysql:latest
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - 3306:3306
    env_file:
      - ./db/.env
    volumes:
      - mysql-data-volume:/var/lib/mysql/
      - mysql-socket-volume:/var/run/mysqld/

volumes:
  mysql-data-volume:
  mysql-socket-volume:
  client-volume: